{"version":3,"sources":["Board.js","GameInfo.js","MoveButton.js","constants.js","NivoPieChart.js","NivoBarChart.js","NivoLineChart.js","Results.js","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","style","hilite","backgroundColor","colors","value","Board","renderBoard","board","i","rows","j","push","_this","renderSquare","key","_this2","this","highlighted","squares","Component","GameInfo","status","sortMovesAscending","moves","historyLength","playerOneIsX","switchPlayers","updateState","undoLastMove","reverse","title","disabled","startsWith","MoveButton","styles",":hover","hoverColor","_this$props","bolded","handleClick","handleMouse","label","onMouseEnter","onMouseLeave","Radium","colorP1","colorP2","colorTie","NivoPieChart","_ref","data","nivo_pie_esm","margin","top","right","bottom","left","borderColor","from","modifiers","enableRadialLabels","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","tooltip","_ref2","id","color","theme","labels","text","fontSize","container","background","borderRadius","axis","tickColor","ticks","line","stroke","fill","legend","grid","NivoBarChart","maxValue","nivo_bar_esm","indexBy","keys","colorBy","concat","padding","enableLabel","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","axisLeft","_ref3","NivoLineChart","nivo_line_esm","curve","xScale","type","yScale","stacked","min","max","orient","legendOffset","legendPosition","tickValues","pointSize","pointColor","pointBorderWidth","pointBorderColor","pointLabel","pointLabelYOffset","enableSlices","Results","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleOptionChange","changeEvent","setState","selectedOption","target","state","results","games","played","p1Wins","p2Wins","ties","Math","pieData","barData","player","p1","p1Color","p2","p2Color","tiesColor","lineData","map","forEach","game","talley","x","y","toFixed","name","checked","onChange","src_NivoPieChart","src_NivoBarChart","src_NivoLineChart","initialState","history","Array","stepNumber","xIsNext","calculateWinner","lines","length","_lines$i","slicedToArray","b","c","winningLine","localStorage","P1","P2","Ties","Games","JSON","stringify","winner","console","log","Game","objectSpread","Number","parse","update","arguments","undefined","_this$state","slice","addGame","result","newHighlighted","newResults","t","includes","gameId","pos","step","_this$state2","current","X","O","move","jumpTo","src_MoveButton","handleMouseOverStep","src_Board","mouseOverStep","src_GameInfo","resetInitial","src_Results","ReactDOM","render","src_Game","document","getElementById"],"mappings":"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","file":"static/js/main.dafb0413.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nfunction Square(props) {\n  return (\n    <button\n      className={`square`}\n      onClick={props.onClick}\n      style={props.hilite ? { backgroundColor: props.colors[props.value]} : {}}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends Component {\n  renderSquare(i) {\n    return (\n      <Square\n        hilite={this.props.highlighted[i]}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n        key={i}\n        colors={this.props.colors} \n      />\n    );\n  }\n\n  renderBoard = () => {\n    let board = [];\n\n    for (let i = 0; i < 3; i++) {\n      let rows = [];\n      for (let j = (i * 3); j < (i+1)*3; j++) {\n        rows.push(this.renderSquare(j))\n      }\n      \n      board.push(<div className=\"board-row\" key={i}>{rows}</div>)\n    }\n    return board;\n  }\n\n  render() {\n    return (\n      <div className=\"game-board\">{this.renderBoard()}</div>\n    );\n  }\n}\n\nexport default Board;","import React from 'react';\n\nconst GameInfo = props => {\n\n  const { status, sortMovesAscending, moves, historyLength, playerOneIsX, switchPlayers, updateState, undoLastMove } = props;\n\n  return (\n    <div className=\"game-info\">\n      <div className=\"game-status\">\n        <h2>{status}</h2>\n      </div>\n      <div className=\"move-list\">\n        <h4>Moves</h4>\n        <hr />\n        <div>\n          <ol>{sortMovesAscending ? moves : moves.reverse()}</ol>\n        </div>\n      </div>\n      <div className=\"game-board-buttons\">\n        <button title=\"Start New Game\"\n          onClick={() => updateState({playerOneIsX: playerOneIsX}, true)}\n        >\n          <i className=\"fas fa-power-off\"></i>\n        </button>\n        <button title=\"Switch Players\"\n          onClick={() => switchPlayers()}\n          disabled={historyLength !== 1}\n        >\n          <i className=\"fas fa-random\"></i>\n        </button>\n        <button title=\"Undo Last Move\"\n          onClick={() => undoLastMove()}\n          disabled={historyLength === 1 || !status.startsWith('Next')}\n        >\n          <i className=\"fas fa-undo fa-sm\"></i>\n        </button>\n        <button\n          title={sortMovesAscending ? \"Sort Moves Descending\" : \"Sort Moves Ascending\"}\n          onClick={() => updateState({sortMovesAscending: !sortMovesAscending})}\n          disabled={historyLength === 1}\n        >\n          <i className={sortMovesAscending ? \"fas fa-sort-down\" : \"fas fa-sort-up\"}></i>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default GameInfo;\n","import Radium from 'radium';\nimport React, { Component } from 'react';\n\nclass MoveButton extends Component {\n\n  styles = {\n    ':hover': {\n      backgroundColor: this.props.hoverColor\n    }\n  };\n\n  render() {\n\n    const {bolded, handleClick, handleMouse, label, disabled } = this.props;\n    return (\n      <button\n        className={bolded ? 'bolded' : ''}\n        onClick={() => handleClick()}\n        onMouseEnter={() => handleMouse()}\n        onMouseLeave={() => handleMouse()}\n        style={this.styles}\n        disabled={disabled}\n      >\n        {label}\n      </button>\n    );\n  }\n}\n\nMoveButton = Radium(MoveButton);\nexport default MoveButton;\n","// colors\nexport const colorP1 = 'darkOrange';\nexport const colorP2 = 'cornflowerBlue';\nexport const colorTie = 'lightGoldenRodYellow';\nexport const colorTextPrimary = 'whitesmoke';\nexport const colorTextSecondary = '#333333';\n\n\n// SAMPLE PIE CHART DATA\n// const data = [\n//   {\n//     \"id\": \"stylus\",\n//     \"label\": \"stylus\",\n//     \"value\": 289,\n//   },\n//   {\n//     \"id\": \"scala\",\n//     \"label\": \"scala\",\n//     \"value\": 184,\n//   },\n//   {\n//     \"id\": \"php\",\n//     \"label\": \"php\",\n//     \"value\": 12,\n//   },\n//   {\n//     \"id\": \"hack\",\n//     \"label\": \"hack\",\n//     \"value\": 428,\n//   },\n//   {\n//     \"id\": \"java\",\n//     \"label\": \"java\",\n//     \"value\": 323,\n//   }\n// ]","import React from 'react';\nimport { ResponsivePie } from '@nivo/pie';\nimport { colorTextSecondary } from './constants';\n\nconst NivoPieChart = ({ data, colors }) => (\n  <ResponsivePie\n      data={data}\n      colors={colors}\n      margin={{ 'top': 20, 'right': 0, 'bottom': 40, 'left': -20 }}\n      borderColor={{ 'from': 'color', 'modifiers': [['darker', 0.2]] }}\n      enableRadialLabels={false}\n      slicesLabelsSkipAngle={10}\n      slicesLabelsTextColor={colorTextSecondary}\n      animate={true}\n      motionStiffness={90}\n      motionDamping={15}\n\n      tooltip={({ id, value, color }) => (\n        <strong style={{ color }}>\n          {id}: {value}\n        </strong>\n      )}\n      theme={{\n        labels: { text: { fontSize: 25, }},\n        tooltip: {\n          container: {\n            background: colorTextSecondary,\n            borderRadius: '10px',\n          },\n        },\n      }}\n  />\n);\n\nexport default NivoPieChart;","import React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { colorTextSecondary } from './constants';\n\nconst theme = {\n  // background: \"#222222\",\n  axis: {\n    fontSize: \"14px\",\n    tickColor: \"#eee\",\n    ticks: {\n      line: {\n        stroke: \"#555555\"\n      },\n      text: {\n        fill: \"#ffffff\"\n      }\n    },\n    legend: {\n      text: {\n        fill: \"#aaaaaa\"\n      }\n    }\n  },\n  grid: {\n    line: {\n      stroke: \"#777\"\n    }\n  },\n  tooltip: {\n    container: {\n      background: colorTextSecondary,\n      borderRadius: '10px',\n    },\n  },\n};\n\nconst NivoBarChart = ({ data, maxValue }) => (\n  <ResponsiveBar\n      data={data}\n      indexBy='player'\n      keys={['p1', 'p2', 'ties']}\n      maxValue={maxValue}\n      colorBy=\"id\"\n      colors={({ id, data }) => data[`${id}Color`]}\n      margin={{ 'top': 30, 'right': 10, 'bottom': 70, 'left': 20 }}\n      padding={0.35}\n      borderColor={{ 'from': 'color', 'modifiers': [['darker', 0.2]] }}\n      enableLabel={false}\n      animate={true}\n      motionStiffness={90}\n      motionDamping={15}\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n      }}\n      axisLeft={{\n          tickSize: 1,\n          tickPadding: 5,\n          tickRotation: 0,\n      }}\n      tooltip={({ id, value, color }) => (\n        <strong style={{ color }}>\n          {id}{id === 'ties' ? '' : ' wins'}: {value}\n        </strong>\n      )}\n      theme={theme}\n  />\n);\n\nexport default NivoBarChart;","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport { colorTextSecondary } from './constants';\n\nconst theme = {\n  // background: \"#222222\",\n  axis: {\n    fontSize: \"14px\",\n    tickColor: \"#eee\",\n    ticks: {\n      line: {\n        stroke: \"#555555\"\n      },\n      text: {\n        fill: \"#ffffff\"\n      }\n    },\n    legend: {\n      text: {\n        fill: \"#aaaaaa\"\n      }\n    }\n  },\n  grid: {\n    line: {\n      stroke: \"#777\"\n    }\n  },\n  tooltip: {\n    container: {\n      background: colorTextSecondary,\n      borderRadius: '10px',\n    },\n  },\n};\n\nconst NivoLineChart = ({ data, colors }) => (\n  <ResponsiveLine\n      data={data}\n      curve={\"monotoneX\"}\n      // gridYValues={[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]}\n\n      margin={{ top: 30, right: 10, bottom: 90, left: 45 }}\n      xScale={{ type: 'point' }}\n      yScale={{ type: 'linear', stacked: false, min: 0, max: 'auto' }}\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n          orient: 'bottom',\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Games Played',\n          legendOffset: 36,\n          legendPosition: 'middle'\n      }}\n      axisLeft={{\n          orient: 'left',\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          tickValues: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n          legend: 'Count',\n          legendOffset: -40,\n          legendPosition: 'middle'\n      }}\n      colors={colors}\n      pointSize={4}\n      pointColor={{ from: 'color', modifiers: [] }}\n      pointBorderWidth={2}\n      pointBorderColor={{ from: 'serieColor', modifiers: [] }}\n      pointLabel=\"y\"\n      pointLabelYOffset={-12}\n      enableSlices=\"x\"\n\n      animate={true}\n      motionStiffness={90}\n      motionDamping={15}\n\n      tooltip={({ id, value, color }) => (\n        <strong style={{ color }}>\n          {id}{id === 'ties' ? '' : ' wins'}: {value}\n        </strong>\n      )}\n      theme={theme}\n  />\n);\n\nexport default NivoLineChart;\n","import React, { Component } from 'react';\nimport NivoPieChart from './NivoPieChart.js';\nimport NivoBarChart from './NivoBarChart.js';\nimport NivoLineChart from './NivoLineChart.js';\nimport { colorP1, colorP2, colorTie, colorTextSecondary} from './constants';\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: \"pie\"\n    };\n  }\n\n  handleOptionChange = changeEvent => {\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  };\n\n  render() {\n    const { results, games, playerOneIsX } = this.props; // p1Wins, p2Wins, ties}\n    const played = results.p1Wins + results.p2Wins + results.ties;\n    const maxValue = Math.max(results.p1Wins, results.p2Wins, results.ties)\n\n    const pieData = [\n      {\n        id: \"P1 Wins\",\n        label: \"Player 1 Wins\",\n        value: results.p1Wins,\n      },\n      {\n        id: \"P2 Wins\",\n        label: \"Player 2 Wins\",\n        value: results.p2Wins,\n      },\n      {\n        id: \"Ties\",\n        label: \"Tie Games\",\n        value: results.ties,\n      }\n    ]\n    const barData = [\n      {\n        player: \"P1 Wins\",\n        p1: results.p1Wins,\n        p1Color: colorP1,\n        p2: 0,\n        p2Color: colorP2,\n        ties: 0,\n        tiesColor: colorTie,\n      },\n      {\n        player: \"P2 Wins\",\n        p1: 0,\n        p1Color: colorP1,\n        p2: results.p2Wins,\n        p2Color: colorP2,\n        ties: 0,\n        tiesColor: colorTie,\n      },\n      {\n        player: \"Ties\",\n        p1: 0,\n        p1Color: colorP1,\n        p2: 0,\n        p2Color: colorP2,\n        ties: results.ties,\n        tiesColor: colorTie,\n      }\n    ];\n    \n    const myData = [\n      {id: 'p1', data: []},\n      {id: 'p2', data: []},\n      {id: 'ties', data: []},\n    ];\n\n    const lineData = myData.map(line => {\n      games.forEach(game => {\n        let talley;\n        switch (line.id) {\n          case 'p1':\n            talley = game.results.p1Wins;\n            break;\n          case 'p2':\n            talley = game.results.p2Wins;\n            break;\n          default:\n          talley = game.results.ties;\n        }\n\n        line.data.push({x: game.id, y: talley})\n      });\n      return line;\n    });\n\n    if (played > 0) {\n      return (\n        <div className=\"game-results\">\n          <h4>Game Results</h4>\n          <div className=\"result-block\" style={{backgroundColor: colorP1}}>\n            <div className=\"result-subblock\">\n              <h5>PLAYER 1</h5>\n              {playerOneIsX ? 'X' : 'O'}\n            </div>\n            <div className=\"result-subblock\">\n              <h5>WINS</h5>\n              {results.p1Wins}\n            </div>\n            <div className=\"result-subblock\">\n              <h5>WIN %</h5>\n              {((results.p1Wins / played) * 100).toFixed(1)}%\n            </div>\n          </div>\n          <div className=\"result-block\" style={{backgroundColor: colorP2}}>\n            <div className=\"result-subblock\">\n              <h5>PLAYER 2</h5>\n              {playerOneIsX ? 'O' : 'X'}\n            </div>\n            <div className=\"result-subblock\">\n              <h5>WINS</h5>\n              {results.p2Wins}\n            </div>\n            <div className=\"result-subblock\">\n              <h5>WIN %</h5>\n              {((results.p2Wins / played) * 100).toFixed(1)}%\n            </div>\n          </div>\n          <div className=\"result-block\" style={{backgroundColor: colorTie, color: colorTextSecondary }}>\n            <div className=\"result-subblock\">\n              <h5>GAMES PLAYED</h5>\n              {played}\n            </div>\n            <div className=\"result-subblock\">\n              <h5>TIES</h5>\n              {results.ties}\n            </div>\n            <div className=\"result-subblock\">\n            <h5>TIE %</h5>{((results.ties / played) * 100).toFixed(1)}%<br />\n            </div>\n          </div>\n          <div className=\"chartSelection\">\n    \n            <label>\n              <input type=\"radio\" name=\"chartType\" value=\"pie\"\n                checked={this.state.selectedOption === \"pie\"}\n                onChange={this.handleOptionChange}\n              />\n              {/* Pie */}\n              <i className=\"fas fa-chart-pie\"></i>\n            </label>\n            <label>\n              <input type=\"radio\" name=\"chartType\" value=\"bar\"\n                checked={this.state.selectedOption === \"bar\"}\n                onChange={this.handleOptionChange}\n              />\n              {/* Bar */}\n              <i className=\"fas fa-chart-bar\"></i>\n            </label>\n            <label>\n              <input type=\"radio\" name=\"chartType\" value=\"line\"\n                checked={this.state.selectedOption === \"line\"}\n                onChange={this.handleOptionChange}\n              />\n              <i className=\"fas fa-chart-line\"></i>\n              {/* Line */}\n            </label>\n          </div>\n          <div className=\"pie\">\n            {this.state.selectedOption === \"pie\" ?\n              <NivoPieChart data={pieData} colors={[colorP1, colorP2, colorTie]} />\n              : (this.state.selectedOption === \"bar\" ?\n                <NivoBarChart data={barData} maxValue={maxValue + 2} />\n                :\n                <NivoLineChart data={lineData} colors={[colorP1, colorP2, colorTie]} />\n              )\n            }\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Results;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Board from './Board.js'\nimport GameInfo from './GameInfo.js'\nimport MoveButton from './MoveButton.js'\nimport Results from './Results.js'\nimport { colorP1, colorP2, colorTie } from './constants';\n\nconst initialState = {\n  history: [{squares: Array(9).fill(null)}],\n  stepNumber: 0,\n  sortMovesAscending: true,\n  xIsNext: true,\n  highlighted: Array(9).fill(false),\n  playerOneIsX: true,\n}\n\n// Initialize localStorage if user has not played before\nif(!localStorage.P1) {\n  localStorage.P1 = '0';\n}\nif(!localStorage.P2) {\n  localStorage.P2 = '0';\n}\nif(!localStorage.Ties) {\n  localStorage.Ties = '0';\n}\nif(!localStorage.Games) {\n  localStorage.Games = JSON.stringify([{\n    id: 0,\n    winner: '',\n    squares: [],\n    winningLine: '',\n    results: {p1Wins: 0, p2Wins: 0, ties: 0},\n  }]);\n}\n\nconsole.log(\"localStorage >>> \", localStorage);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { player: squares[a], winningLine: lines[i] };\n    }\n  }\n  return null;\n}\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...initialState,\n      results: { p1Wins: Number(localStorage.P1), p2Wins: Number(localStorage.P2), ties: Number(localStorage.Ties) },\n      // results: {p1Wins: 10, p2Wins: 8, ties: 11},\n      // games: [{\n      //   id: 0,\n      //   winner: '',\n      //   squares: [],\n      //   winningLine: '',\n      //   results: {p1Wins: 0, p2Wins: 0, ties: 0},\n      // }],\n      games: JSON.parse(localStorage.Games),\n    };\n  }\n\n  updateState(update, resetInitial=false) {\n    if (resetInitial) {\n      this.setState({\n        ...this.state,\n        ...initialState,\n        ...update,\n      });\n\n    } else {\n      this.setState({\n        ...this.state,\n        ...update,\n      });\n    }\n  }\n\n  handleClick(i) {\n    const { stepNumber, xIsNext, games, playerOneIsX } = this.state;\n    const history = this.state.history.slice(0, stepNumber + 1);\n    const current = history[history.length -1];\n    const squares = current.squares.slice();  // returns a shallow copy of this.state.squares array into new variable squares\n\n    // return early if someone has won the game or if a Square is already filled\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = xIsNext ? 'X' : 'O';\n\n    let addGame;\n    let newHighlighted = Array(9).fill(false);\n    let newResults = {};\n    let result;\n    let p1=0, p2=0, t=0;\n    const winner = calculateWinner(squares);\n\n    if (winner) {\n      winner.winningLine.forEach(i => newHighlighted[i] = true);\n      if (winner.player === 'X') {\n        result = playerOneIsX ? 'p1Wins' : 'p2Wins';\n      } else {\n        result = playerOneIsX ? 'p2Wins' : 'p1Wins';\n      }\n      if (result === 'p1Wins') {\n        p1++;\n      } else {\n        p2++;\n      }\n    } else if (!squares.includes(null)) {\n      newHighlighted = Array(9).fill(true);\n      result = 'ties';\n      t++;\n    }\n\n    if (result) {\n      const gameId = games.length;\n      newResults[result] = this.state.results[result] + 1;\n      addGame = {\n        id: gameId,\n        squares: squares,\n        winner: result,\n        winningLine: t === 0 ? winner.winningLine : null,\n        results: {\n          p1Wins: games[gameId-1].results.p1Wins + p1,\n          p2Wins: games[gameId-1].results.p2Wins + p2,\n          ties: games[gameId-1].results.ties + t}\n      }\n\n      localStorage.P1 = +localStorage.P1 + p1;\n      localStorage.P2 = +localStorage.P2 + p2;\n      localStorage.Ties = +localStorage.Ties + t;\n    }\n\n    if (addGame) {\n      games.push(addGame);\n      localStorage.Games = JSON.stringify(games);\n    }\n\n    this.setState({\n      games: games,\n      history: history.concat([{\n        squares: squares,\n        pos: i,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !xIsNext,\n      highlighted: newHighlighted,\n      results: {...this.state.results, ...newResults}\n    });\n  }\n\n  handleMouseOverStep(i) {\n    const newHighlighted = Array(9).fill(false);\n    newHighlighted[i] = !this.state.highlighted[i];\n    this.setState({\n      highlighted: newHighlighted,\n    })\n  }\n\n  showWinner(line) {\n    const newHighlighted = Array(9).fill(false);\n    line.forEach(i => newHighlighted[i] = true);\n    this.setState({\n      highlighted: newHighlighted,\n    })\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  switchPlayers() {\n    this.setState({\n      xIsNext: true,\n      playerOneIsX: !this.state.playerOneIsX,\n    });\n  }\n\n  undoLastMove() {\n    if (this.state.history.length > 1) {\n      this.setState({\n        stepNumber: this.state.history.length - 2,\n        xIsNext: !this.state.xIsNext,\n        history: this.state.history.slice(0, this.state.history.length - 1),\n        highlighted: Array(9).fill(false),\n      });\n    }\n  }\n\n  render() {\n    const { highlighted, history, stepNumber, playerOneIsX, xIsNext, results, games, sortMovesAscending } = this.state;\n    const current = history[stepNumber];\n    const winner = calculateWinner(current.squares);\n    const colors = playerOneIsX ? { X: colorP1, O: colorP2 } : { X: colorP2, O: colorP1 };\n\n    const moves = history.map((step, move) => {\n      if (move === 0) {\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)} >\n              Start\n            </button>\n          </li>\n        );\n      }\n\n      return (\n        <li key={move}>\n          <MoveButton\n            bolded={stepNumber === move}\n            handleClick={() => this.jumpTo(move)}\n            handleMouse={() => this.handleMouseOverStep(step.pos)}\n            label={`${step.squares[step.pos]} in ${step.pos}`}\n            hoverColor={colors[step.squares[step.pos]]}\n            // disabled={!status.startsWith('Next')}\n          />\n        </li>\n      );\n    });\n        \n    let status;\n    if (winner) {\n        status = `${winner.player} WINS!`;\n    } else if (!current.squares.includes(null)) {\n        status = `Tie!`;\n        colors.X = colorTie;\n        colors.O = colorTie;\n    } else {\n        status = `Next: ${xIsNext ? 'X' : 'O'}`;\n    }\n\n    return (\n      <div className=\"game\">\n        <Board\n          squares={current.squares}\n          onClick={(i) => this.handleClick(i)}\n          highlighted={highlighted}\n          mouseOverStep={(i) => this.handleMouseOverStep(i)}\n          colors={colors}\n        />\n        <div className=\"holder\">\n          <GameInfo\n            status={status}\n            sortMovesAscending={sortMovesAscending}\n            moves={moves}\n            historyLength={history.length}\n            playerOneIsX={playerOneIsX}\n            switchPlayers={() => this.switchPlayers()}\n            updateState={(update, resetInitial) => this.updateState(update, resetInitial)}\n            undoLastMove={() => this.undoLastMove()}\n          />\n\n          <Results\n            results={results}\n            games={games}\n            playerOneIsX={playerOneIsX}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n  \nReactDOM.render(<Game />, document.getElementById('root'));"],"sourceRoot":""}